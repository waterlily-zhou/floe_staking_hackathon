/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AutoClaimDelegator,
  AutoClaimDelegatorInterface,
} from "../../../contracts/delegation/AutoClaimDelegator";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minRewardsUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasAwareRatio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compoundAwareRatio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "ClaimDelegated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "ClaimRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "ratioType",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ratio",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "RatioCalculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "gaugeAddresses",
        type: "address[]",
      },
      {
        internalType: "address[][]",
        name: "rewardTokensPerGauge",
        type: "address[][]",
      },
    ],
    name: "batchClaimOnBehalf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minRewardsUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasAwareRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "compoundAwareRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "durationDays",
        type: "uint256",
      },
    ],
    name: "delegateClaims",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegationExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getDelegationDetails",
    outputs: [
      {
        internalType: "bool",
        name: "hasValidDelegation",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "minRewardsUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasAwareRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "compoundAwareRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasDelegatedClaims",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentRewardsUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "estimatedGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "estimatedCompoundReturn",
        type: "uint256",
      },
    ],
    name: "shouldClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userThresholds",
    outputs: [
      {
        internalType: "uint256",
        name: "minRewardsUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasAwareRatio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "compoundAwareRatio",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611b1c806100606000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a4d3180511610066578063a4d318051461015a578063b0ac4b4a14610164578063eb3d525814610194578063f75409f6146101c8578063f851a440146101f85761009e565b806307850a58146100a357806317744416146100d65780634a9717e2146100f257806362e2171e1461010e578063704b6c021461013e575b600080fd5b6100bd60048036038101906100b891906110ae565b610216565b6040516100cd949392919061110f565b60405180910390f35b6100f060048036038101906100eb919061120f565b610253565b005b61010c600480360381019061010791906112d0565b6104c7565b005b610128600480360381019061012391906110ae565b610762565b6040516101359190611337565b60405180910390f35b610158600480360381019061015391906110ae565b610782565b005b6101626108c2565b005b61017e600480360381019061017991906110ae565b61095f565b60405161018b9190611352565b60405180910390f35b6101ae60048036038101906101a991906110ae565b610977565b6040516101bf95949392919061136d565b60405180910390f35b6101e260048036038101906101dd91906113c0565b610ad5565b6040516101ef9190611337565b60405180910390f35b610200610cb4565b60405161020d919061144a565b60405180910390f35b60036020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900460ff16905084565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d8906114e8565b60405180910390fd5b84600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16801561037a575042600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b6103b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b09061157a565b60405180910390fd5b828290508585905014610401576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f8906115e6565b60405180910390fd5b60005b858590508110156104be57600084848381811061042457610423611606565b5b90506020028101906104369190611644565b80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505090506104aa8888888581811061048f5761048e611606565b5b90506020020160208101906104a491906110ae565b83610cd8565b5080806104b6906116d6565b915050610404565b50505050505050565b6000811180156104d9575061016d8111155b610518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050f90611790565b60405180910390fd5b60008411806105275750600083115b806105325750600082115b610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890611822565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555062015180816105d79190611842565b426105e29190611884565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550604051806080016040528085815260200184815260200183815260200160011515815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055509050503373ffffffffffffffffffffffffffffffffffffffff167fb0e257212ffa4ca8eae204efce7f911c60ede9f07374ca3d9abc8d658fa20447858585600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205460405161075494939291906118b8565b60405180910390a250505050565b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610810576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610807906114e8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361087f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087690611949565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167ff87f7afc1d35c123125dfbf5e85b52d6ef2df5d704055c17e9441e817ae7786060405160405180910390a2565b60026020528060005260406000206000915090505481565b6000806000806000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610a17575042600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b94506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff1615610a89578060000154945080600101549350806002015492505b600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505091939590929450565b6000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580610b6e575042600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054105b15610b7c5760009050610cab565b6000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060030160009054906101000a900460ff16610bdf576000915050610cab565b60008486610bed9190611842565b905060008260000154118015610c065750816000015487105b15610c1657600092505050610cab565b60008260010154118015610c2a5750600081115b15610c57576000610c3b8883611010565b90508260010154811015610c555760009350505050610cab565b505b60008260020154118015610c6b5750600081115b8015610c775750600084115b15610ca4576000610c888583611010565b90508260020154811015610ca25760009350505050610cab565b505b6001925050505b95945050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d66576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5d906114e8565b60405180910390fd5b82600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168015610dff575042600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410155b610e3e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e359061157a565b60405180910390fd5b60007f9faceb1b4a41e0e991b5758dec4e9fd3cce8b6ca196ba73a67684edf99ae51a3905060005b8351811015610fba5760008573ffffffffffffffffffffffffffffffffffffffff168388878581518110610e9d57610e9c611606565b5b6020026020010151604051602401610eb6929190611969565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610f209190611a03565b6000604051808303816000865af19150503d8060008114610f5d576040519150601f19603f3d011682016040523d82523d6000602084013e610f62565b606091505b5050905080610fa6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9d90611a66565b60405180910390fd5b508080610fb2906116d6565b915050610e66565b508473ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe426040516110019190611352565b60405180910390a25050505050565b60008082036110225760009050611040565b81633b9aca00846110339190611842565b61103d9190611ab5565b90505b92915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061107b82611050565b9050919050565b61108b81611070565b811461109657600080fd5b50565b6000813590506110a881611082565b92915050565b6000602082840312156110c4576110c3611046565b5b60006110d284828501611099565b91505092915050565b6000819050919050565b6110ee816110db565b82525050565b60008115159050919050565b611109816110f4565b82525050565b600060808201905061112460008301876110e5565b61113160208301866110e5565b61113e60408301856110e5565b61114b6060830184611100565b95945050505050565b600080fd5b600080fd5b600080fd5b60008083601f84011261117957611178611154565b5b8235905067ffffffffffffffff81111561119657611195611159565b5b6020830191508360208202830111156111b2576111b161115e565b5b9250929050565b60008083601f8401126111cf576111ce611154565b5b8235905067ffffffffffffffff8111156111ec576111eb611159565b5b6020830191508360208202830111156112085761120761115e565b5b9250929050565b60008060008060006060868803121561122b5761122a611046565b5b600061123988828901611099565b955050602086013567ffffffffffffffff81111561125a5761125961104b565b5b61126688828901611163565b9450945050604086013567ffffffffffffffff8111156112895761128861104b565b5b611295888289016111b9565b92509250509295509295909350565b6112ad816110db565b81146112b857600080fd5b50565b6000813590506112ca816112a4565b92915050565b600080600080608085870312156112ea576112e9611046565b5b60006112f8878288016112bb565b9450506020611309878288016112bb565b935050604061131a878288016112bb565b925050606061132b878288016112bb565b91505092959194509250565b600060208201905061134c6000830184611100565b92915050565b600060208201905061136760008301846110e5565b92915050565b600060a0820190506113826000830188611100565b61138f60208301876110e5565b61139c60408301866110e5565b6113a960608301856110e5565b6113b660808301846110e5565b9695505050505050565b600080600080600060a086880312156113dc576113db611046565b5b60006113ea88828901611099565b95505060206113fb888289016112bb565b945050604061140c888289016112bb565b935050606061141d888289016112bb565b925050608061142e888289016112bb565b9150509295509295909350565b61144481611070565b82525050565b600060208201905061145f600083018461143b565b92915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006114d2602183611465565b91506114dd82611476565b604082019050919050565b60006020820190508181036000830152611501816114c5565b9050919050565b7f4e6f2076616c69642064656c65676174696f6e20666f7220746869732075736560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611564602183611465565b915061156f82611508565b604082019050919050565b6000602082019050818103600083015261159381611557565b9050919050565b7f4172726179206c656e677468206d69736d617463680000000000000000000000600082015250565b60006115d0601583611465565b91506115db8261159a565b602082019050919050565b600060208201905081810360008301526115ff816115c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261166157611660611635565b5b80840192508235915067ffffffffffffffff8211156116835761168261163a565b5b60208301925060208202360383131561169f5761169e61163f565b5b509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116e1826110db565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611713576117126116a7565b5b600182019050919050565b7f4475726174696f6e206d757374206265206265747765656e203120616e64203360008201527f3635206461797300000000000000000000000000000000000000000000000000602082015250565b600061177a602783611465565b91506117858261171e565b604082019050919050565b600060208201905081810360008301526117a98161176d565b9050919050565b7f4174206c65617374206f6e65207468726573686f6c64206d757374206265206760008201527f726561746572207468616e203000000000000000000000000000000000000000602082015250565b600061180c602d83611465565b9150611817826117b0565b604082019050919050565b6000602082019050818103600083015261183b816117ff565b9050919050565b600061184d826110db565b9150611858836110db565b9250828202611866816110db565b9150828204841483151761187d5761187c6116a7565b5b5092915050565b600061188f826110db565b915061189a836110db565b92508282019050808211156118b2576118b16116a7565b5b92915050565b60006080820190506118cd60008301876110e5565b6118da60208301866110e5565b6118e760408301856110e5565b6118f460608301846110e5565b95945050505050565b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000611933600f83611465565b915061193e826118fd565b602082019050919050565b6000602082019050818103600083015261196281611926565b9050919050565b600060408201905061197e600083018561143b565b61198b602083018461143b565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156119c65780820151818401526020810190506119ab565b60008484015250505050565b60006119dd82611992565b6119e7818561199d565b93506119f78185602086016119a8565b80840191505092915050565b6000611a0f82846119d2565b915081905092915050565b7f436c61696d20726577617264732063616c6c206661696c656400000000000000600082015250565b6000611a50601983611465565b9150611a5b82611a1a565b602082019050919050565b60006020820190508181036000830152611a7f81611a43565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611ac0826110db565b9150611acb836110db565b925082611adb57611ada611a86565b5b82820490509291505056fea2646970667358221220e6a6b086007c3de03d9b37d18e6beb9de2dae725f294d7b3867064777354bf2564736f6c63430008140033";

type AutoClaimDelegatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AutoClaimDelegatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AutoClaimDelegator__factory extends ContractFactory {
  constructor(...args: AutoClaimDelegatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AutoClaimDelegator & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AutoClaimDelegator__factory {
    return super.connect(runner) as AutoClaimDelegator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AutoClaimDelegatorInterface {
    return new Interface(_abi) as AutoClaimDelegatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AutoClaimDelegator {
    return new Contract(address, _abi, runner) as unknown as AutoClaimDelegator;
  }
}
